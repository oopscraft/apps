plugins {
	id 'java'
	id 'java-library'
	id 'org.springframework.boot' version '2.5.2'
	id 'maven-publish'
	id 'idea'
	id 'com.google.cloud.tools.jib' version '3.2.1'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {

	// platform
	implementation platform(project(":apps-dependencies"))
	annotationProcessor platform(project(":apps-dependencies"))
	testAnnotationProcessor platform(project(":apps-dependencies"))

	// project
	api project(':apps-core')

	// spring boot starter
	api 'org.springframework.boot:spring-boot-starter-web'
	api 'org.springframework.boot:spring-boot-starter-thymeleaf'
	//api 'org.springframework.boot:spring-boot-starter-security'
	api 'org.springframework.boot:spring-boot-starter-websocket'
	api 'org.springframework.boot:spring-boot-starter-actuator'

	// spring doc
	api "org.springdoc:springdoc-openapi-data-rest:1.5.9"
	api "org.springdoc:springdoc-openapi-ui:1.5.9"
	api "io.swagger.core.v3:swagger-annotations:2.1.9"

	// annotationProcessor
	annotationProcessor 'javax.annotation:javax.annotation-api'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor group: 'com.querydsl', name: 'querydsl-apt'
	annotationProcessor group: 'com.querydsl', name: 'querydsl-apt', classifier: 'jpa'
	annotationProcessor 'org.hibernate:hibernate-jpamodelgen'

	// unit test
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
	testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testCompileOnly 'org.junit.platform:junit-platform-runner'

	// include module
	println("== includeSubmodule:${includeSubmodule}")
	if(includeSubmodule == true) {
		runtimeOnly "org.oopscraft.apps:apps-sandbox-core:1.0.0-SNAPSHOT@jar"
		runtimeOnly "org.oopscraft.apps:apps-sandbox-web:1.0.0-SNAPSHOT@jar"
	}
}

test {
	useJUnitPlatform()
}

bootJar {
	enabled = true
	classifier = 'boot'
}

jar {
	enabled = true
	classifier = ''
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
}

jib {
	def imageTag = findProperty('imageTag') ?: 'latest'
	def ecrPass = findProperty("ecrPass") ?: ""
	from {
		image = '705228377258.dkr.ecr.ap-northeast-2.amazonaws.com/amazoncorretto:11.0.14-alpine3.15'
	}
	to {
		image = '705228377258.dkr.ecr.ap-northeast-2.amazonaws.com/core/kis-online-api'
		auth {
			username = 'AWS'
			password = "$ecrPass"
			//credHelper = 'ecr-login'
		}
		tags = ["$imageTag"]
	}
	container {
		// jvmFlags = ['-Dmy.property=example.value', '-Xms512m', '-Xdebug']
		// args = ['some', 'args']
		ports = ['8080']
		// labels = [key1:'value1', key2:'value2']
		format = 'OCI'
	}
}
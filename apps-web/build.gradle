plugins {
	id 'java'
	id 'java-library'
	id 'org.springframework.boot' version '2.5.2'
	id 'maven-publish'
	id 'idea'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

sourceSets {
	main {
		resources {
			srcDirs += ['src/main/java']
			exclude "**/*.java"
		}
	}
	test {
		resources {
			srcDirs += ['src/test/java']
			exclude "**/*.java"
		}
	}
}

dependencies {

	// platform
	implementation platform(project(":apps-dependencies"))
	annotationProcessor platform(project(":apps-dependencies"))
	testAnnotationProcessor platform(project(":apps-dependencies"))

	// project
	api project(':apps-core')

	// spring boot starter
	api 'org.springframework.boot:spring-boot-starter-web'
	api 'org.springframework.boot:spring-boot-starter-thymeleaf'
	//api 'org.springframework.boot:spring-boot-starter-security'
	api 'org.springframework.boot:spring-boot-starter-websocket'
	api 'org.springframework.boot:spring-boot-starter-actuator'

	// annotationProcessor
	annotationProcessor 'javax.annotation:javax.annotation-api'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor group: 'com.querydsl', name: 'querydsl-apt'
	annotationProcessor group: 'com.querydsl', name: 'querydsl-apt', classifier: 'jpa'
	annotationProcessor 'org.hibernate:hibernate-jpamodelgen'

	// unit test
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
	testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testCompileOnly 'org.junit.platform:junit-platform-runner'

	// include module
	println("== includeModule:${includeModule}")
	if(includeModule == true) {
		runtimeOnly 'org.oopscraft.apps:apps-module-web:1.0.0-SNAPSHOT@jar'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	enabled = true
	classifier = 'boot'
}

jar {
	enabled = true
	classifier = ''
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
}

// defines module
gradle.ext.submodules = [
    'apps-module'
]

/**
 * includeSubmodule
 * @param submodule
 * @return
 */
def includeSubmodule(submodule) {
    println("== includeSubmodule:${submodule}")
    includeBuild(submodule) {
        dependencySubstitution {
            substitute(module("org.oopscraft.apps:${submodule}-core"))
                    .with(project(":${submodule}-core"))
            substitute(module("org.oopscraft.apps:${submodule}-web"))
                    .with(project(":${submodule}-web"))
            substitute(module("org.oopscraft.apps:${submodule}-batch"))
                    .with(project(":${submodule}-batch"))
        }
    }
}

// load submodules
gradle.ext.submodules.each { submodule ->
    def directory = file(submodule)
    if(directory.exists() && directory.listFiles({it.getName() == "build.gradle"} as FileFilter).length) {
        System.setProperty('includeModule','true')
        includeSubmodule(submodule)
    }
}


